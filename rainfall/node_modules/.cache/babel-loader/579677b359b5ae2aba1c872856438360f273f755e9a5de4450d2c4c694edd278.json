{"ast":null,"code":"var _jsxFileName = \"D:\\\\New Folder\\\\Main\\\\Coding\\\\Python\\\\Data Science\\\\Projects\\\\Practice\\\\Indian Crop Agri\\\\rainfall\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedState, setSelectedState] = useState('');\n  const [plotUrl, setPlotUrl] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/states').then(response => {\n      if (response.data.length > 0) {\n        const firstState = response.data[0]; // Get the first state from the fetched data\n        setSelectedState(firstState); // Set the first state as the initial selected state\n      } else {\n        console.log('No states found.');\n      }\n    }).catch(error => {\n      console.error('Error fetching states:', error);\n    });\n  }, []);\n  const handleStateChange = event => {\n    setSelectedState(event.target.value);\n    setPlotUrl(''); // Clear the plot URL when the state is changed\n  };\n\n  const handleGeneratePlot = () => {\n    axios.get(`http://localhost:5000/api/rainfall_plot?state=${selectedState}`).then(response => {\n      // Assuming the response contains the URL of the saved plot image\n      setPlotUrl(response.data.plot_url);\n    }).catch(error => {\n      console.error('Error generating plot:', error);\n    });\n  };\n  const handleShowPlot = () => {\n    if (selectedState !== '') {\n      handleGeneratePlot();\n    }\n  };\n  useEffect(() => {\n    console.log('Plot URL:', plotUrl);\n  }, [plotUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gradient-to-r from-slate-900 via-purple-900 to-slate-900 min-h-screen p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"text-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-4xl font-bold\",\n        children: \"Rainfall Data Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-orange-500 text-lg\",\n        children: \"Explore annual rainfall data for different states in India.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"border border-gray-300 rounded-md py-2 px-4 mr-2 focus:outline-none focus:border-blue-500\",\n        value: selectedState,\n        onChange: handleStateChange,\n        placeholder: \"Enter state name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-md transition duration-300\",\n        onClick: handleShowPlot,\n        children: \"Show Plot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), plotUrl !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/${plotUrl}`,\n        alt: \"Rainfall Plot\",\n        className: \"max-w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"etPVFq6fUyyJMmgynOtZu7mSI40=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","selectedState","setSelectedState","plotUrl","setPlotUrl","get","then","response","data","length","firstState","console","log","catch","error","handleStateChange","event","target","value","handleGeneratePlot","plot_url","handleShowPlot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/New Folder/Main/Coding/Python/Data Science/Projects/Practice/Indian Crop Agri/rainfall/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [selectedState, setSelectedState] = useState('');\n  const [plotUrl, setPlotUrl] = useState('');\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/states')\n      .then(response => {\n        if (response.data.length > 0) {\n          const firstState = response.data[0]; // Get the first state from the fetched data\n          setSelectedState(firstState); // Set the first state as the initial selected state\n        } else {\n          console.log('No states found.');\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching states:', error);\n      });\n  }, []);\n\n  const handleStateChange = (event) => {\n    setSelectedState(event.target.value);\n    setPlotUrl(''); // Clear the plot URL when the state is changed\n  };\n\n  const handleGeneratePlot = () => {\n    axios.get(`http://localhost:5000/api/rainfall_plot?state=${selectedState}`)\n      .then(response => {\n        // Assuming the response contains the URL of the saved plot image\n        setPlotUrl(response.data.plot_url);\n      })\n      .catch(error => {\n        console.error('Error generating plot:', error);\n      });\n  };\n\n  const handleShowPlot = () => {\n    if (selectedState !== '') {\n      handleGeneratePlot();\n    }\n  };\n\n  useEffect(() => {\n    console.log('Plot URL:', plotUrl);\n  }, [plotUrl]);\n\n  return (\n    <div className=\"bg-gradient-to-r from-slate-900 via-purple-900 to-slate-900 min-h-screen p-8\">\n      <header className=\"text-center mb-8\">\n        <h1 className=\"text-white text-4xl font-bold\">Rainfall Data Visualization</h1>\n        <p className=\"text-orange-500 text-lg\">Explore annual rainfall data for different states in India.</p>\n      </header>\n      <div className=\"flex items-center justify-center mb-4\">\n        <input\n          type=\"text\"\n          className=\"border border-gray-300 rounded-md py-2 px-4 mr-2 focus:outline-none focus:border-blue-500\"\n          value={selectedState}\n          onChange={handleStateChange}\n          placeholder=\"Enter state name\"\n        />\n        <button\n          className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-md transition duration-300\"\n          onClick={handleShowPlot}\n        >\n          Show Plot\n        </button>\n      </div>\n      {/* Display the plot image if the URL is available */}\n      {plotUrl !== '' && (\n        <div className=\"text-center\">\n          \n          <img src={`http://localhost:5000/${plotUrl}`} alt=\"Rainfall Plot\" className=\"max-w-full\" />\n        </div>\n      )}\n    </div>\n  );\n  \n};\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}